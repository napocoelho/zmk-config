/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECT_LINE";
        };

        select_left: select_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT) &kp LC(LS(RIGHT))>;
            label = "SELECT_LEFT";
        };

        select_right: select_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LC(LS(LEFT))>;
            label = "SELECT_RIGHT";
        };

        macro_o_agudo: macro_o_agudo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp O>;
            label = "MACRO_O_AGUDO";
        };

        Down5x: Down5x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
            label = "DOWN5X";
        };

        Up5x: Up5x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP &kp UP &kp UP &kp UP &kp UP>;
            label = "UP5X";
        };

        Enter_Abaixo: Enter_Abaixo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp ENTER>;
            label = "ENTER_ABAIXO";
        };

        Enter_Acima: Enter_Acima {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp ENTER &kp UP_ARROW>;
            label = "ENTER_ACIMA";
        };
    };

    behaviors {
        aLeftShift: aLeftShift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALEFTSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <6 18 30 31 19 7 8 9 10 11 23 35 34 22 21 33 32 20 38 39 41>;
        };

        aRightShift: aRightShift {
            compatible = "zmk,behavior-hold-tap";
            label = "ARIGHTSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 12 24 25 13 1 2 14 26 27 15 3 4 16 28 29 17 5 38 39 40>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q                &kp W                   &kp E                   &kp R                 &kp T        &kp Y        &kp U                     &kp I                    &kp O                    &kp P                         &kp BACKSLASH
&lt 5 ESC   &aLeftShift LCTRL A  &aLeftShift LEFT_GUI S  &aLeftShift LEFT_ALT D  &aLeftShift LSHIFT F  &kp G        &kp H        &aRightShift LSHIFT J     &aRightShift LEFT_ALT K  &aRightShift LEFT_GUI L  &aRightShift LCTRL SEMICOLON  &lt 5 SINGLE_QUOTE
&kp LSHIFT  &kp Z                &kp X                   &kp C                   &aLeftShift LCTRL V   &kp B        &kp N        &kp M                     &kp COMMA                &kp DOT                  &kp FSLH                      &kp LSHIFT
                                                         &lt 3 DELETE            &lt 4 SPACE           &lt 1 TAB    &lt 1 ENTER  &aLeftShift LSHIFT SPACE  &lt 2 BACKSPACE
            >;

            label = "Base";
        };

        Navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0      &none      &kp PG_UP     &kp PAGE_DOWN  &kp F2      &none           &Up5x          &none         &kp HOME      &kp END        &none      &none
&none      &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT   &kp LSHIFT  &none           &kp LEFT       &kp DOWN      &kp UP        &kp RIGHT      &kt LCTRL  &none
&kp LSHFT  &none      &none         &none          &none       &none           &Down5x        &select_left  &select_line  &select_right  &none      &kp LSHIFT
                                    &trans         &trans      &Enter_Acima    &Enter_Abaixo  &trans        &trans
            >;

            label = "Nav";
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7        &kp N8  &kp N9  &kp N0  &kp PERCENT
&none       &kp LCTRL     &kp LEFT_GUI  &kp LEFT_ALT  &kp LSHIFT    &kp PLUS     &kp ASTERISK  &kp N4        &kp N5  &kp N6  &kp N0  &none
&kp LSHIFT  &none         &none         &kp PERIOD    &kp COMMA     &kp MINUS    &kp SLASH     &kp NUMBER_1  &kp N2  &kp N3  &none   &kp LSHIFT
                                        &trans        &trans        &trans       &trans        &trans        &trans
            >;

            label = "Num";
        };

        Functions {
            bindings = <
&to 0              &kp F1               &kp F2           &kp F3           &kp F4                &none     &trans      &none         &none         &none         &none         &none
&kp C_VOLUME_UP    &mt LEFT_CONTROL F5  &mt LEFT_GUI F6  &mt LEFT_ALT F7  &mt LEFT_SHIFT F8     &none     &trans      &kp RSHFT     &kp RALT      &kp RGUI      &kp RCTRL     &out OUT_TOG
&kp C_VOLUME_DOWN  &mt LEFT_SHIFT F9    &kp F10          &kp F11          &mt LEFT_CONTROL F12  &none     &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                                                         &trans           &trans                &trans    &trans      &trans        &trans
            >;

            label = "Func";
        };

        Symbols {
            bindings = <
&to 0  &kp GRAVE        &kp MINUS       &kp PLUS   &none       &none          &none      &kp LBKT       &kp LBRC       &kp RBRC              &kp RBKT               &none
&none  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH   &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&none  &none            &kp UNDERSCORE  &kp EQUAL  &kp COLON   &none          &none      &none          &kp LESS_THAN  &kp GREATER_THAN      &none                  &none
                                        &trans     &trans      &trans         &trans     &trans         &trans
            >;

            label = "Symb";
        };

        Testes {
            bindings = <
&none  &kp PRINTSCREEN  &kp INS  &kp SCROLLLOCK  &none          &none    &none  &kp N7  &kp N8  &kp N9  &none  &none
&none  &none            &none    &none           &none          &none    &none  &kp N4  &kp N5  &kp N6  &none  &none
&none  &none            &none    &none           &none          &none    &none  &kp N1  &kp N2  &kp N3  &none  &none
                                 &kp LC(PG_UP)   &kp LC(PG_DN)  &none    &none  &kp N0  &none
            >;

            label = "Testes";
        };
    };
};
